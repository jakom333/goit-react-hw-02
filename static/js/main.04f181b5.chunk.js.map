{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.jsx","components/section/Section.jsx","components/notification/Notification.jsx","components/statistics/Statistics.jsx","components/App.jsx","index.js","components/App.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","event","setState","prevState","target","textContent","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","this","Object","keys","className","styles","container","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAiBeA,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACID,EAAQE,KAAI,SAAAC,GACR,OAAO,wBAAQC,KAAK,SAAsBC,QAASJ,EAA5C,SAA8DE,GAAnCA,OCU/BG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,MCOEC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,6BAAMA,KCoBCC,EArBI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACID,EAAQ,EACR,+BACI,wCAAYH,KACZ,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UACI,cAAC,EAAD,CAAcN,QAAQ,uB,gBCiCvBO,E,4MAvCbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,SAACkB,GACjB,EAAKC,UAAS,SAAAC,GAAS,sBAC1BF,EAAMG,OAAOC,YAAcF,EAAUF,EAAMG,OAAOC,aAAe,O,EAIhEC,mBAAqB,WAAO,IAAD,EACM,EAAKN,MAChC,OAFqB,EACjBN,KADiB,EACXC,QADW,EACFC,K,EAIzBW,gCAAkC,WAAO,IAC3Bb,EAAS,EAAKM,MAAdN,KACZ,OAAOc,SAAkB,IAAPd,EAAc,EAAKY,uBAAyB,G,4CAGhE,WAAU,IAAD,EACwBG,KAAKT,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBd,EAAU4B,OAAOC,KAAKF,KAAKT,OACjC,OACE,sBAAKY,UAAWC,IAAOC,UAAvB,UACE,cAAC,EAAD,CAASzB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBP,QAASA,EAASC,gBAAiB0B,KAAK1B,oBAE3D,cAAC,EAAD,CAASM,MAAM,aAAf,SACE,cAAC,EAAD,CAAYK,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOY,KAAKH,qBAAsBR,mBAAoBW,KAAKF,6C,GAhCvGQ,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.04f181b5.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return (\n        options.map(option => {\n            return <button type='button' key={option} onClick={onLeaveFeedback}>{option}</button>\n        })\n    \n    )\n}\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\n    onLeaveFeedback: PropTypes.func.isRequired\n}\n\nexport default FeedbackOptions;","import PropTypes from 'prop-types'\n\nconst Section = ({ title, children }) => {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Section;","import PropTypes from 'prop-types'\n\n\nconst Notification = ({ message }) => {\n    return (\n        <h2>{ message}</h2>\n)\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport default Notification;","import Notification from '../notification/Notification'\nimport PropTypes from 'prop-types'\n\n\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\n    return (\n        total > 0 ?\n        <ul>\n            <li>Good: { good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad: {bad}</li>\n            <li>Total: {total}</li>\n            <li>Positive feedback: {positivePercentage}%</li>\n        </ul> : <Notification message=\"No feedback given\"/>\n    )\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired\n}\n\nexport default Statistics;","import { Component } from 'react';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions'\nimport Section from './section/Section';\nimport Statistics from './statistics/Statistics';\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (event) => {\n    this.setState(prevState => ({\n[event.target.textContent]: prevState[event.target.textContent] + 1,\n    }))\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n        return (good + neutral + bad);\n  }\n\n  countPositiveFeedbackPercentage = () => {\n        const { good } = this.state;\n    return parseInt( (good * 100) / this.countTotalFeedback()) || 0;\n  }\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state)\n    return (\n      <div className={styles.container}>\n        <Section title='Please leave feedback'>\n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback}></FeedbackOptions>\n        </Section>\n        <Section title='Statistics'>\n          <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()}/>\n        </Section>\n        \n      </div>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\"};"],"sourceRoot":""}